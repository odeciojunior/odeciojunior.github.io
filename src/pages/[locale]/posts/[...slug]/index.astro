---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import PostDetails from "@/layouts/PostDetails.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import { SUPPORTED_LANGUAGES, type Language } from "@/i18n/config";

export const getStaticPaths = (async () => {
  const posts = await getCollection("blog", ({ data }) => !data.draft);
  const sortedPosts = getSortedPosts(posts);

  const paths = [];

  for (const language of SUPPORTED_LANGUAGES) {
    const locale = language === 'en-US' ? 'en' : language === 'pt-BR' ? 'pt' : language;
    
    // Get posts for this locale
    const localePosts = sortedPosts.filter(post => {
      if (post.data.locale) {
        return post.data.locale === language;
      }
      return true; // Show all posts if no locale specified
    });

    for (const post of localePosts) {
      paths.push({
        params: { 
          locale,
          slug: post.id 
        },
        props: { 
          post,
          locale: language
        }
      });
    }
  }

  return paths;
}) satisfies GetStaticPaths;

const { post, locale } = Astro.props;
const currentLocale = locale as Language;

// Set current language in Astro.locals
Astro.locals.currentLanguage = currentLocale;
---

<PostDetails post={post} />