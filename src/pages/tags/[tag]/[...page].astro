---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import { DEFAULT_LANGUAGE } from "@/i18n/config";
import getUniqueTags from "@/utils/getUniqueTags";

// This is a redirect page for old non-localized tag URLs
// Generate paths for all existing tags and common pagination
export const getStaticPaths = (async () => {
  const posts = await getCollection("blog", ({ data }) => !data.draft);
  const tags = getUniqueTags(posts);
  
  const paths: { params: { tag: string; page?: string } }[] = [];
  
  // Generate paths for each tag
  for (const tag of tags) {
    // First page (no page number)
    paths.push({ params: { tag: tag.tag } });
    
    // Additional pages (1-10 should cover most cases)
    for (let i = 2; i <= 10; i++) {
      paths.push({ params: { tag: tag.tag, page: i.toString() } });
    }
  }
  
  return paths;
}) satisfies GetStaticPaths;

// Old tag URLs redirect to localized versions
const tag = Astro.params.tag || '';
const page = typeof Astro.params.page === 'string' ? Astro.params.page : '1';
const defaultLocale = DEFAULT_LANGUAGE === 'en-US' ? 'en' : DEFAULT_LANGUAGE === 'pt-BR' ? 'pt' : DEFAULT_LANGUAGE;

return Astro.redirect(page === '1' 
  ? `/${defaultLocale}/tags/${tag}/`
  : `/${defaultLocale}/tags/${tag}/${page}/`, 301);
---