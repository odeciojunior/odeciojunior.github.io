---
// Root posts list page - serves English content directly
// With prefixDefaultLocale: false, English content is served from root
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Main from "@/layouts/Main.astro";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Card from "@/components/Card.astro";
import Pagination from "@/components/Pagination.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import { SITE } from "@/config";
import { t } from "@/i18n/utils";

export const getStaticPaths = (async ({ paginate }) => {
  const posts = await getCollection("blog", ({ data }) => !data.draft);
  const sortedPosts = getSortedPosts(posts);
  
  // Filter posts for English locale
  const localePosts = sortedPosts.filter(post => {
    // If post has specific locale, use only English posts
    if (post.data.locale) {
      return post.data.locale === 'en-US';
    }
    // If no specific locale, show in all locales
    return true;
  });
  
  return paginate(localePosts, { 
    pageSize: SITE.postPerPage 
  });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const currentLocale = 'en-US';

// Set current language in Astro.locals
Astro.locals.currentLanguage = currentLocale;
---

<Layout title={`${t(currentLocale, 'posts')} | ${SITE.title}`} lang={currentLocale}>
  <Header />
  <Main pageTitle={t(currentLocale, 'posts')} pageDesc={t(currentLocale, 'postsDescription')}>
    <ul>
      {page.data.map(data => <Card {...data} locale={currentLocale} />)}
    </ul>
  </Main>

  <Pagination page={page} />

  <Footer noMarginTop={page.lastPage > 1} />
</Layout>