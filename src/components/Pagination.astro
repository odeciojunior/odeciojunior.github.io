---
import type { Page } from "astro";
import type { CollectionEntry } from "astro:content";
import IconArrowLeft from "@/assets/icons/IconArrowLeft.svg";
import IconArrowRight from "@/assets/icons/IconArrowRight.svg";
import LinkButton from "./LinkButton.astro";
import { getLanguageFromURL } from "@/i18n/utils";

export interface Props {
  page: Page<CollectionEntry<"blog">>;
  locale?: string;
}

const { page, locale } = Astro.props;

// Get current language
const currentLanguage = Astro.locals.currentLanguage || getLanguageFromURL(Astro.url.pathname);
const localeSlug = locale || (currentLanguage === 'en-US' ? 'en' : currentLanguage === 'pt-BR' ? 'pt' : currentLanguage);

// Update pagination URLs to include locale
const prevUrl = page.url.prev ? `/${localeSlug}${page.url.prev}` : null;
const nextUrl = page.url.next ? `/${localeSlug}${page.url.next}` : null;
---

{
  page.lastPage > 1 && (
    <nav class="mt-auto mb-8 flex justify-center" aria-label="Pagination">
      <LinkButton
        disabled={!prevUrl}
        href={prevUrl as string}
        class:list={["me-4 select-none", { "opacity-50": !prevUrl }]}
        ariaLabel="Previous"
      >
        <IconArrowLeft class="inline-block rtl:rotate-180" />
        Prev
      </LinkButton>
      {page.currentPage} / {page.lastPage}
      <LinkButton
        disabled={!nextUrl}
        href={nextUrl as string}
        class:list={["ms-4 select-none", { "opacity-50": !nextUrl }]}
        ariaLabel="Next"
      >
        Next
        <IconArrowRight class="inline-block rtl:rotate-180" />
      </LinkButton>
    </nav>
  )
}
