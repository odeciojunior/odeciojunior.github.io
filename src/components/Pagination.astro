---
import type { Page } from "astro";
import type { CollectionEntry } from "astro:content";
import IconArrowLeft from "@/assets/icons/IconArrowLeft.svg";
import IconArrowRight from "@/assets/icons/IconArrowRight.svg";
import LinkButton from "./LinkButton.astro";
import { getLanguageFromURL, createTranslator, generateLocalizedPath, type Language } from "@/i18n/utils";

export interface Props {
  page: Page<CollectionEntry<"blog">>;
  locale?: Language;
}

const { page, locale } = Astro.props;

// Get current language
const currentLanguage = locale || Astro.locals.currentLanguage || getLanguageFromURL(Astro.url.pathname);
const t = createTranslator(currentLanguage);

// Update pagination URLs to include proper locale paths
const prevUrl = page.url.prev ? generateLocalizedPath(page.url.prev, currentLanguage) : null;
const nextUrl = page.url.next ? generateLocalizedPath(page.url.next, currentLanguage) : null;
---

{
  page.lastPage > 1 && (
    <nav class="mt-auto mb-8 flex justify-center" aria-label="Pagination">
      <LinkButton
        disabled={!prevUrl}
        href={prevUrl as string}
        class:list={["me-4 select-none", { "opacity-50": !prevUrl }]}
        ariaLabel={t('common.previous')}
      >
        <IconArrowLeft class="inline-block rtl:rotate-180" />
        {t('common.previous')}
      </LinkButton>
      {t('common.pageOf', { current: page.currentPage, total: page.lastPage })}
      <LinkButton
        disabled={!nextUrl}
        href={nextUrl as string}
        class:list={["ms-4 select-none", { "opacity-50": !nextUrl }]}
        ariaLabel={t('common.next')}
      >
        {t('common.next')}
        <IconArrowRight class="inline-block rtl:rotate-180" />
      </LinkButton>
    </nav>
  )
}
